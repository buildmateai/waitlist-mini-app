/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DebateContract,
  DebateContractInterface,
} from "../../contracts/DebateContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "DebateCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningOption",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    name: "DebateEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakePlaced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "createDebate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "debateRewards",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "debates",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "winningOption",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
    ],
    name: "endDebate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
    ],
    name: "getDebate",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "stakes",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "winningOption",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserVote",
    outputs: [
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "option",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasUserVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeAndVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinStake",
        type: "uint256",
      },
    ],
    name: "updateMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePercent",
        type: "uint256",
      },
    ],
    name: "updatePlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100db57601f611a2238819003918201601f19168301916001600160401b038311848410176100e0578084926020946040528339810103126100db57516001600160a01b0390818116908190036100db5733156100c25760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600180556000600255600560045562989680600555600354161760035561192b90816100f78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060a05260c060405260048036101561001857600080fd5b60003560e01c806303c7881a1461123a5780630f07a76c14610f5f57806311eac85514610f35578063476343ee14610df757806359758fcf14610d37578063715018a614610cde5780638c639a8514610cbf5780638cdb442f14610c9f5780638da5cb5b14610c7557806398d336af14610a45578063aa0b5988146109e9578063ae169a501461073c578063b3c3c845146103fb578063c172c3ca14610392578063d2fa95601461020c578063dc296ae11461019d578063f18876841461017e5763f2fde38b146100e857600080fd5b34610179576020366003190112610179576001600160a01b0381358181169290839003610179576101176114d8565b82156101605750600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b602490600060a0515191631e4fbdf760e01b8352820152fd5b600080fd5b3461017957600036600319011261017957602060055460a05151908152f35b50346101795760a05136600319011261017957602090356101bc6112c9565b9060025481111580610203575b6101d29061165e565b6000526006825260a05190600b82600020019060018060a01b0316600052825260ff81600020541690519015158152f35b508015156101c9565b503461017957602036600319011261017957803560025481111580610389575b6102359061165e565b80600052600660205260a0519182600020926008840154421061034f5750600983019081549060ff8216610313575060ff19166001179055600582018054600093918490815b8381106102cc576102ca86807fef017bda8789bb32f3eea835ca786f6e79441b7df11b0a549f560d815dcabce78a60068a82600a820155015460a05151918252602082015260a05190a261175b565b005b826102d78284611646565b919054600392831b1c116102f5575b506102f090611504565b61027b565b91925095506103048683611646565b9054911b1c90856102f06102e6565b606490602060a051519162461bcd60e51b83528201526014602482015273111958985d1948185b1c9958591e48195b99195960621b6044820152fd5b906020606492519162461bcd60e51b83528201526014602482015273111958985d19481b9bdd081e595d08195b99195960621b6044820152fd5b5080151561022c565b50346101795760a0518060031936011261017957602435913560005260076020526000208054821015610179576060916103cb916114a6565b5060018060a01b038154169060ff60026001830154920154169060a051519283526020830152151560a051820152f35b50346101795760803660031901126101795767ffffffffffffffff9080358281116101795761042d9036908301611437565b906024918235848111610179576104479036908401611437565b9260443593858511610179573660238601121561017957848401359061046c8261148e565b9561047b60a051519788611319565b8287526020978888019085600595861b8401019236841161017957868101925b8484106107165750505050506064359460028751106106d257610e10861015806106c5575b15610677579195906104d6600295949554611504565b968795866002558660005260068a5260a051600020948786556001948593848801336bffffffffffffffffffffffff60a01b82541617905561051b8960028a01611529565b610529600396878a01611529565b4260078901556105398b42611639565b60088901556009880160ff198154169055600081848a019901955b6105aa575b8d8b8d817f0b65520c4493fbf0a5306921aa079653edfb08b0f7ca621269a41e7b59a585d68e61059660a05191825192835260a0518301906113f7565b93868201528033940390a360a05151908152f35b90919293949596979899835182101561067057508c81831b84010151895490600160401b918281101561065c57808b6105e692018d558c611646565b61064957906105f491611529565b86549081101561063557889594939291610616828861062994018a5589611646565b815490600019908c1b1b19169055611504565b8c9a9998979695610554565b85604186634e487b7160e01b600052526000fd5b87600088634e487b7160e01b8252526000fd5b87604188634e487b7160e01b600052526000fd5b9998610559565b60a0515162461bcd60e51b81529081018890526021818501527f4475726174696f6e206d757374206265203120686f757220746f2031207765656044820152606b60f81b6064820152608490fd5b5062093a808611156104c0565b60a0515162461bcd60e51b8152908101889052601b818501527f4174206c656173742032206f7074696f6e7320726571756972656400000000006044820152606490fd5b8335838111610179578c9161073183928b3691870101611437565b81520193019261049b565b5034610179576020806003193601126101795781359061075a6116f8565b600254821115806109e0575b61076f9061165e565b816000526006815260a0518060002060ff6009820154169081156109d1575b501561099a5750816000526006815260a051806000209033600052600b8201835260ff81600020541615610962575033600052600d8101825260a05190816000205491600a820154809303610931575061082e6108339261082960069333600052600c8101875261080960a051600020549360058301611646565b9590549101549460031b1c9360646108228a548361171b565b049061174e565b61171b565b61172e565b60035460a0515163a9059cbb60e01b815233818701908152602081018490529295929091849183916001600160a01b0316908290600090829060400103925af1908115610924576000916108f7575b50156108bb57507f4cbfa67f54cf0255619787991cb52aa46c0d3ee5cfabb0abf659f2b310f474859060a051519384523393a360018055005b60649160a051519162461bcd60e51b8352820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b6044820152fd5b6109179150833d851161091d575b61090f8183611319565b8101906116a2565b38610882565b503d610905565b60a051513d6000823e3d90fd5b5162461bcd60e51b8152808601849052600c60248201526b2737ba1030903bb4b73732b960a11b6044820152606490fd5b5162461bcd60e51b81528085018390526013602482015272446964206e6f7420706172746963697061746560681b6044820152606490fd5b5162461bcd60e51b815292830152506013602482015272446562617465207374696c6c2061637469766560681b6044820152606490fd5b6008915001544210153861078e565b50811515610766565b503461017957602036600319011261017957803590610a066114d8565b60148211610a115755005b606490602060a051519162461bcd60e51b8352820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152fd5b503461017957602036600319011261017957803560025481111580610c6c575b610a6e9061165e565b600052600660205260a051600020908160805281549060018060a01b03600184015416908301926006810154600782015460088301549060ff60098501541692610abf6002600a8701549601611351565b95610ace600360805101611351565b895490610ada8261148e565b91610ae960a051519384611319565b80835260208301809c60005260206000206000915b838310610c4f575050505060a05151988993846020600560805101549c8d815201809c60056080510160005260206000209060005b818110610c365750505091610b52610b80959492610b72940388611319565b602060a051519e8f90815201528c610160809160a05101528d01906113f7565b908b820360608d01526113f7565b9089820360808b015251808252602082019160208260051b8201019b926000915b838310610c085750505050888a0360a08a0152505180895260009860200196905b808a10610bf057505086975060c087015260e086015261010085015215156101208401526101408301520390f35b90966020806001928a51815201980199019890610bc2565b909192939c6020808f600193610c2791601f19878303018852516113f7565b9f019301930191939290610ba1565b8254845289945060209093019260019283019201610b33565b600160208192610c5e85611351565b815201920192019190610afe565b50801515610a65565b346101795760003660031901126101795760005460a051516001600160a01b039091168152602090f35b503461017957602036600319011261017957610cb96114d8565b35600555005b5034610179576000366003190112610179576020905460a05151908152f35b3461017957600036600319011261017957610cf76114d8565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461017957602036600319011261017957356000908152600660205260a0519020805460018201546001600160a01b031691610d7660028201611351565b610d8260038301611351565b916006810154926007820154610dd6600884015492610dc8600a60ff6009880154169601549660a051519a8b9a8b5260208b01526101208060a0518c01528a01906113f7565b9088820360608a01526113f7565b94608087015260a086015260c0850152151560e08401526101008301520390f35b503461017957600036600319011261017957610e116114d8565b60035460a051516370a0823160e01b8152308184015260209290916001600160a01b0390811691908484602481865afa93841561092457600094610f06575b508315610ecb576000805460a0515163a9059cbb60e01b815292166001600160a01b03169282019283526020830194909452928492849290918391829060400103925af1908115610924576102ca92600092610eae575b50506116ba565b610ec49250803d1061091d5761090f8183611319565b3880610ea7565b60a0515162461bcd60e51b815280830186905260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b9093508481813d8311610f2e575b610f1e8183611319565b8101031261017957519238610e50565b503d610f14565b346101795760003660031901126101795760035460a051516001600160a01b039091168152602090f35b50346101795760603660031901126101795780356024803592604491823592610f866116f8565b60025485111580611231575b610f9b9061165e565b8460005260069160209383855260a0518060002060ff600982015416159081611223575b50156111f0575060055486106111b8578660005283855260a0518181600020015489101561118857508660005283855260a051600b816000200133600052865260ff81600020541661115957509060648592600060018060a01b03600354168960a0515197889687956323b872dd60e01b8752339087015230908601528401525af18015610924576110599160009161113c575b506116ba565b836000528082526110c985600560a051600b816000200133600052865280600020600160ff1982541617905587600052848652600c816000200133600052865286816000205587600052848652600d81600020013360005286528281600020558760005284865260002001611646565b81549060031b906110dc8682841c611639565b821b91600019901b19161790558360005280825260a05160002001611102838254611639565b905560a051519384528301527fe10fdde2c5cd9b92e449ee25df01febda2cbebc5553e38f2250ffe7f2d5143bc339260a05190a360018055005b6111539150843d861161091d5761090f8183611319565b38611053565b83600d606494886c105b1c9958591e481d9bdd1959609a1b94519562461bcd60e51b8752860152840152820152fd5b83600e606494886d24b73b30b634b21037b83a34b7b760911b94519562461bcd60e51b8752860152840152820152fd5b735374616b6520616d6f756e7420746f6f206c6f7760601b8360146064948860a051519562461bcd60e51b8752860152840152820152fd5b8360116064948870446562617465206e6f742061637469766560781b94519562461bcd60e51b8752860152840152820152fd5b600891500154421038610fbf565b50841515610f92565b503461017957604036600319011261017957356112556112c9565b600254821115806112c0575b61126a9061165e565b81600052600660205260a05190600c82600020019060018060a01b031690816000526020528160002054926000526006602052600d82600020019060005260205280600020549051918252602082015260a05190f35b50811515611261565b602435906001600160a01b038216820361017957565b90600182811c9216801561130f575b60208310146112f957565b634e487b7160e01b600052602260045260246000fd5b91607f16916112ee565b90601f8019910116810190811067ffffffffffffffff82111761133b57604052565b634e487b7160e01b600052604160045260246000fd5b9060405191826000825492611365846112df565b9081845260019485811690816000146113d45750600114611391575b505061138f92500383611319565b565b9093915060005260209081600020936000915b8183106113bc57505061138f93508201013880611381565b855488840185015294850194879450918301916113a4565b91505061138f94506020925060ff191682840152151560051b8201013880611381565b919082519283825260005b848110611423575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611402565b81601f820112156101795780359067ffffffffffffffff821161133b576040519261146c601f8401601f191660200185611319565b8284526020838301011161017957816000926020809301838601378301015290565b67ffffffffffffffff811161133b5760051b60200190565b80548210156114c2576000526003602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b031633036114ec57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146115135760010190565b634e487b7160e01b600052601160045260246000fd5b919091825167ffffffffffffffff811161133b5761154782546112df565b601f81116115f1575b50602080601f831160011461158d575081929394600092611582575b50508160011b916000199060031b1c1916179055565b01519050388061156c565b90601f198316958460005282600020926000905b8882106115d9575050836001959697106115c0575b505050811b019055565b015160001960f88460031b161c191690553880806115b6565b806001859682949686015181550195019301906115a1565b600083815260208120601f840160051c8101926020851061162f575b601f0160051c01915b828110611624575050611550565b818155600101611616565b909250829061160d565b9190820180921161151357565b80548210156114c25760005260206000200190600090565b1561166557565b60405162461bcd60e51b8152602060048201526015602482015274111958985d1948191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b90816020910312610179575180151581036101795790565b156116c157565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b600260015414611709576002600155565b604051633ee5aeb560e01b8152600490fd5b8181029291811591840414171561151357565b8115611738570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161151357565b600081815260209060068252604080822093600a8501549560058601906117828883611646565b9054600391821b1c9283156118e957610822996117aa60068b0154606460049d8e548361171b565b938b899b019a5b8b548110156118da578281146117d0575b6117cb90611504565b6117b1565b866117db8286611646565b905490871b1c806117ee575b50506117c2565b9061082e6117fc928961171b565b888b5260078c52898b208a51906060820182811067ffffffffffffffff8211176118c5578c528c82528d82019283528b8201928d84528154600160401b8110156118af576118519060019384820181556114a6565b93909361189a575183546001600160a01b039091166001600160a01b0319909116178355519082015590516002909101805460ff191691151560ff1691909117905586386117e7565b50508f8d80602492634e487b7160e01b825252fd5b50508f8d6041602492634e487b7160e01b835252fd5b508f8d6041602492634e487b7160e01b835252fd5b509a5050505050505050505050565b5050965050505050505056fea2646970667358221220d2aaebaf0d5d41911efedac9137c9d1e2190179227bb5a01fd18c6ed30f41ce064736f6c63430008140033";

type DebateContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebateContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebateContract__factory extends ContractFactory {
  constructor(...args: DebateContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      DebateContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DebateContract__factory {
    return super.connect(runner) as DebateContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebateContractInterface {
    return new Interface(_abi) as DebateContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DebateContract {
    return new Contract(address, _abi, runner) as unknown as DebateContract;
  }
}
