/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DebateContractV2,
  DebateContractV2Interface,
} from "../../contracts/DebateContractV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_debateToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "DebateCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningOption",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    name: "DebateEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "optionIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakePlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateUserReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "createDebate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "debateCreationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "debateToken",
    outputs: [
      {
        internalType: "contract DebateToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "debates",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "winningOption",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "platformFeeCollected",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
    ],
    name: "endDebate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
    ],
    name: "getDebate",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "stakes",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "winningOption",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "platformFeeCollected",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalDebates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserActiveDebate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserVote",
    outputs: [
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "option",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasUserVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debateId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeAndVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "updateCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxStake",
        type: "uint256",
      },
    ],
    name: "updateMaxStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinStake",
        type: "uint256",
      },
    ],
    name: "updateMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePercent",
        type: "uint256",
      },
    ],
    name: "updatePlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userActiveDebates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100fb57601f611f1238819003918201601f19168301916001600160401b03831184841017610100578084926020946040528339810103126100fb57516001600160a01b0390818116908190036100fb5733156100e25760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560006003556005805568056bc75e2d6310000060065569021e19e0c9bab24000006007556802b5e3af16b18800006008556004541617600455611dfb90816101178239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060405260048036101561001357600080fd5b60003560e01c90816303c7881a146117e05781630f07a76c146114d957816321af0da7146114b25781633461f164146114945781633f4ba83a1461142b578163476343ee146112ea57816359758fcf146112225781635c975abb146111ff5781635d80ca32146111e15781636fa23795146111c2578163715018a6146111695781638456cb591461110f5781638c639a85146110f15781638cdb442f146110855781638da5cb5b1461105c5781638fa7f74514610fe157816398d336af14610db8578163a7d67ae114610d9a578163aa0b598814610d3d578163ae169a5014610a65578163b3c3c84514610500578163c546295b14610153578163d2fa9560146102f7578163dc296ae11461028a578163e750d6fa1461023e578163f188768414610220578163f2fde38b14610192575063ff0b2ba61461015357600080fd5b3461018d57602036600319011261018d576001600160a01b0361017461188b565b16600052600a6020526020604060002054604051908152f35b600080fd5b3461018d57602036600319011261018d576101ab61188b565b6101b3611a68565b6001600160a01b039081169182156102085750600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b602490600060405191631e4fbdf760e01b8352820152fd5b3461018d57600036600319011261018d576020600654604051908152f35b3461018d57604036600319011261018d576102796020913561025e611875565b9060035481111580610281575b61027490611c71565b611d33565b604051908152f35b5080151561026b565b3461018d57604036600319011261018d57356102a4611875565b90600354811115806102ee575b6102ba90611c71565b6000526009602052600c6040600020019060018060a01b0316600052602052602060ff604060002054166040519015158152f35b508015156102b1565b3461018d576020908160031936011261018d578035916003918254841115806104f7575b61032490611c71565b8360005260098252604060002090600882015442106104bc5760098201805460ff81166104815760018401546001600160a01b039081169390338514908115610473575b501561042f575060ff19166001179055600582018054600095909186805b8481106103f057897fef017bda8789bb32f3eea835ca786f6e79441b7df11b0a549f560d815dcabce760408b8b8b8b83600a8301556006820191600b60646103d2855460055490611cf3565b04910155600052600a825260008481205554908351928352820152a2005b816103fb8285611c18565b905490861b1c11610415575b61041090611aac565b610386565b809850610423915082611c18565b905490831b1c87610407565b60405162461bcd60e51b8152908101869052601d60248201527f4f6e6c792063726561746f72206f72206f776e65722063616e20656e640000006044820152606490fd5b905060005416331489610368565b60405162461bcd60e51b81528084018690526014602482015273111958985d1948185b1c9958591e48195b99195960621b6044820152606490fd5b60405162461bcd60e51b81529081018390526014602482015273111958985d19481b9bdd081e595d08195b99195960621b6044820152606490fd5b5083151561031b565b3461018d57608036600319011261018d5767ffffffffffffffff813581811161018d5761053090369084016119f9565b916024803583811161018d5761054990369084016119f9565b9360449283359385851161018d573660238601121561018d57848201359461057086611a50565b9561057e60405197886118db565b808752602097868989019260051b8401019236841161018d57878101925b848410610a3f5750505050506064918235946105b6611c4e565b6105be611c30565b33600052600a88526040600020546109f6578451156109bf5788511561098057865160028110159081610974575b501561093d57610e1086101580610930575b156108e7578154600854604080516323b872dd60e01b8152338187019081523060208201529182019290925290918a9183916001600160a01b0316908290600090829060600103925af19081156108db576000916108ae575b501561086f5790886106be969593926003926106738454611aac565b998a978886558860005260098d5260406000209689885560019b8c96878a01336bffffffffffffffffffffffff60a01b8254161790556106b68b60028c01611ad1565b888a01611ad1565b4260078901556106ce8b42611be1565b60088901556009880160ff19815416905560006005858a019901965b61074f575b8e8b8e8e827f0b65520c4493fbf0a5306921aa079653edfb08b0f7ca621269a41e7b59a585d68f33600052600a87528260406000205561073a604051916040835260408301906119b9565b93878201528033940390a38055604051908152f35b909192939495969798998451821015610868575061076d8185611bee565b51511561082e5761077e8185611bee565b5189549068010000000000000000918281101561081a57808f6107a492018d558c611c18565b61080757906107b291611ad1565b8754908110156107f3578c98979695949392916107d7828b6107ea94018a5589611c18565b815490600019908c1b1b19169055611aac565b8d9a99986106ea565b86604187634e487b7160e01b600052526000fd5b88600089634e487b7160e01b8252526000fd5b88604189634e487b7160e01b600052526000fd5b50754f7074696f6e2063616e6e6f7420626520656d70747960501b849160168f88906040519562461bcd60e51b8752860152840152820152fd5b99986106ef565b91601c7f4372656174696f6e20666565207472616e73666572206661696c6564000000009293896040519562461bcd60e51b8752860152840152820152fd5b6108ce9150893d8b116108d4575b6108c681836118db565b810190611a94565b8a610657565b503d6108bc565b6040513d6000823e3d90fd5b837f4475726174696f6e206d757374206265203120686f757220746f2031207765656084946021606b60f81b948c6040519762461bcd60e51b8952880152860152840152820152fd5b5062093a808611156105fe565b916015740c8b4c4c081bdc1d1a5bdb9cc81c995c5d5a5c9959605a1b9293896040519562461bcd60e51b8752860152840152820152fd5b600a915011158a6105ec565b91601b7f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000009293896040519562461bcd60e51b8752860152840152820152fd5b916015745469746c652063616e6e6f7420626520656d70747960581b9293896040519562461bcd60e51b8752860152840152820152fd5b837f5573657220616c72656164792068617320616e206163746976652064656261746084946021606560f81b948c6040519762461bcd60e51b8952880152860152840152820152fd5b833583811161018d578b91610a5a83928c36918701016119f9565b81520193019261059c565b3461018d5760208060031936011261018d57813590610a82611c4e565b60035482111580610d34575b610a9790611c71565b8160005260098152604060002060ff600982015416908115610d25575b5015610cec57816000526009815260406000209233600052600c8401825260ff6040600020541615610cb45733600052600e8401825260406000205493600a810154809503610c8257600f8101943360005285845260ff60406000205416610c4c5790610b5a610b5f9233600052600d83018652610b55610b3e6040600020549260058601611c18565b90549060031b1c936006600b820154910154611d26565b611cf3565b611d06565b3360008181529584526040808720805460ff191660011790558354815163a9059cbb60e01b8152808601938452602084018590529397869385939084900301918391906001600160a01b03165af19081156108db57600091610c2f575b5015610bf457507f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7906040519384523393a360018055005b6064916040519162461bcd60e51b8352820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b6044820152fd5b610c469150833d85116108d4576108c681836118db565b85610bbc565b60405162461bcd60e51b8152808401859052600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606490fd5b506064916040519162461bcd60e51b8352820152600c60248201526b2737ba1030903bb4b73732b960a11b6044820152fd5b6064916040519162461bcd60e51b83528201526013602482015272446964206e6f7420706172746963697061746560681b6044820152fd5b826064916040519162461bcd60e51b83528201526013602482015272446562617465207374696c6c2061637469766560681b6044820152fd5b60089150015442101584610ab4565b50811515610a8e565b3461018d57602036600319011261018d57803590610d59611a68565b60148211610d675750600555005b60649060206040519162461bcd60e51b8352820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152fd5b3461018d57600036600319011261018d576020600854604051908152f35b3461018d57602036600319011261018d57803560035481111580610fd8575b610de090611c71565b6000526009602052604060002080549060018060a01b036001820154169281019260068201546007830154600884015460ff60098601541691600a86015493600b87015495610e3160028901611913565b610e3d60038a01611913565b908b5492610e4a84611a50565b93610e5860405195866118db565b80855260208501809e60005260206000206000915b838310610fbb57505050509060059392918b60405160208197889301549182815201906005829f0160005260206000209060005b818110610fa25750505003610eb690866118db565b6040519c8d5260208d01528b6101806040819201528c01610ed6916119b9565b8b810360608d0152610ee7916119b9565b908a820360808c01525180825260208201918160051b81016020019c926000915b838310610f755750505050898b0360a08b01525051808a5260009960200197905b808b10610f5d57505087985060c088015260e087015261010086015215156101208501526101408401526101608301520390f35b90976020806001928b5181520199019a019990610f29565b909192939d8e601f198383030184525190610f8f916119b9565b9d60209081019493600101920190610f08565b8254845289945060209093019260019283019201610ea1565b600160208192610fca85611913565b815201920192019190610e6d565b50801515610dd7565b3461018d57602036600319011261018d57803590610ffd611a68565b60065482111561100d5750600755005b60849060206040519162461bcd60e51b8352820152602260248201527f4d6178207374616b65206d7573742062652067726561746572207468616e206d60448201526134b760f11b6064820152fd5b3461018d57600036600319011261018d576000546040516001600160a01b039091168152602090f35b3461018d57602036600319011261018d578035906110a1611a68565b81156110ad5750600655005b60649060206040519162461bcd60e51b8352820152601a60248201527f4d696e207374616b65206d75737420626520706f7369746976650000000000006044820152fd5b3461018d57600036600319011261018d576020600554604051908152f35b3461018d57600036600319011261018d57611128611a68565b611130611c30565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461018d57600036600319011261018d57611182611a68565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461018d57602036600319011261018d576111db611a68565b35600855005b3461018d57600036600319011261018d576020600754604051908152f35b3461018d57600036600319011261018d57602060ff600254166040519015158152f35b3461018d57602036600319011261018d57356000908152600960205260409020805460018201546001600160a01b03169161125f60028201611913565b61126b60038301611913565b9160068101549260078201546008830154906112c360ff600986015416936112b5600b600a880154970154976040519b8c9b8c5260208c01526101408060408d01528b01906119b9565b9089820360608b01526119b9565b95608088015260a087015260c0860152151560e08501526101008401526101208301520390f35b3461018d57600036600319011261018d57611303611a68565b80546040516370a0823160e01b8152308184015260209290916001600160a01b0390811691908484602481865afa9384156108db576000946113fc575b5083156113c25791611385939160008694815416916040519687958694859363a9059cbb60e01b8552840160209093929193604081019460018060a01b031681520152565b03925af19081156108db576113a3926000926113a5575b5050611cb5565b005b6113bb9250803d106108d4576108c681836118db565b828061139c565b60405162461bcd60e51b815280830186905260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b9093508481813d8311611424575b61141481836118db565b8101031261018d57519285611340565b503d61140a565b3461018d57600036600319011261018d57611444611a68565b6002549060ff821615611485575060ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152fd5b3461018d57600036600319011261018d576020600354604051908152f35b3461018d57600036600319011261018d57546040516001600160a01b039091168152602090f35b3461018d57606036600319011261018d57803560243591604435906114fc611c4e565b611504611c30565b600354831115806117d7575b61151990611c71565b826000526009602091818352604060002060ff83820154161590816117c9575b50156117915760065484101580611785575b1561174a578460005281835280604060002001548610156117155784600052818352600c60406000200133600052835260ff604060002054166116e1578054604080516323b872dd60e01b81523393810193845230602085015290830186905291849183918290036060019082906000906001600160a01b03165af180156108db576115df916000916116c4575b50611cb5565b83600052808252600c6040600020013360005282526040600020600160ff1982541617905583600052808252600d6040600020013360005282528260406000205583600052808252600e6040600020013360005282528460406000205583600052808252611654856005604060002001611c18565b81549060031b906116678682841c611be1565b821b91600019901b1916179055836000528152600660406000200161168d838254611be1565b90556040519384528301527fe10fdde2c5cd9b92e449ee25df01febda2cbebc5553e38f2250ffe7f2d5143bc60403393a360018055005b6116db9150843d86116108d4576108c681836118db565b876115d9565b60405162461bcd60e51b8152908101839052600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b60405162461bcd60e51b8152908101839052600e60248201526d24b73b30b634b21037b83a34b7b760911b6044820152606490fd5b60405162461bcd60e51b81529081018390526014602482015273125b9d985b1a59081cdd185ad948185b5bdd5b9d60621b6044820152606490fd5b5060075484111561154b565b60405162461bcd60e51b81529081018390526011602482015270446562617465206e6f742061637469766560781b6044820152606490fd5b600891500154421087611539565b50821515611510565b3461018d57604036600319011261018d57606090356117fd611875565b906003548111158061186c575b61181390611c71565b600052600960205260406000209060018060a01b0316600052600d810160205260406000205490600e8101602052600f604060002054910160205260ff6040600020541690604051928352602083015215156040820152f35b5080151561180a565b602435906001600160a01b038216820361018d57565b600435906001600160a01b038216820361018d57565b90600182811c921680156118d1575b60208310146118bb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118b0565b90601f8019910116810190811067ffffffffffffffff8211176118fd57604052565b634e487b7160e01b600052604160045260246000fd5b9060405191826000825492611927846118a1565b9081845260019485811690816000146119965750600114611953575b5050611951925003836118db565b565b9093915060005260209081600020936000915b81831061197e57505061195193508201013880611943565b85548884018501529485019487945091830191611966565b91505061195194506020925060ff191682840152151560051b8201013880611943565b919082519283825260005b8481106119e5575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016119c4565b81601f8201121561018d5780359067ffffffffffffffff82116118fd5760405192611a2e601f8401601f1916602001856118db565b8284526020838301011161018d57816000926020809301838601378301015290565b67ffffffffffffffff81116118fd5760051b60200190565b6000546001600160a01b03163303611a7c57565b60405163118cdaa760e01b8152336004820152602490fd5b9081602091031261018d5751801515810361018d5790565b6000198114611abb5760010190565b634e487b7160e01b600052601160045260246000fd5b919091825167ffffffffffffffff81116118fd57611aef82546118a1565b601f8111611b99575b50602080601f8311600114611b35575081929394600092611b2a575b50508160011b916000199060031b1c1916179055565b015190503880611b14565b90601f198316958460005282600020926000905b888210611b8157505083600195969710611b68575b505050811b019055565b015160001960f88460031b161c19169055388080611b5e565b80600185968294968601518155019501930190611b49565b600083815260208120601f840160051c81019260208510611bd7575b601f0160051c01915b828110611bcc575050611af8565b818155600101611bbe565b9092508290611bb5565b91908201809211611abb57565b8051821015611c025760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b8054821015611c025760005260206000200190600090565b60ff60025416611c3c57565b60405163d93c066560e01b8152600490fd5b600260015414611c5f576002600155565b604051633ee5aeb560e01b8152600490fd5b15611c7857565b60405162461bcd60e51b8152602060048201526015602482015274111958985d1948191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15611cbc57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b81810292918115918404141715611abb57565b8115611d10570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611abb57565b9060009182526009602052604082209060018060a01b03168252600c810160205260ff604083205416158015611dac575b611da857610b5a6040611da593600d84016020522054610b556006611d90600a86015460058701611c18565b919054600b8701549260031b1c950154611d26565b90565b5090565b50600e81016020526040822054600a8201541415611d6456fea26469706673582212200b3a1dd07036d998441e2f215c237abe88f24c667613ba1c87273a0a57d1778964736f6c63430008140033";

type DebateContractV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebateContractV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebateContractV2__factory extends ContractFactory {
  constructor(...args: DebateContractV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _debateToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_debateToken, overrides || {});
  }
  override deploy(
    _debateToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_debateToken, overrides || {}) as Promise<
      DebateContractV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DebateContractV2__factory {
    return super.connect(runner) as DebateContractV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebateContractV2Interface {
    return new Interface(_abi) as DebateContractV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DebateContractV2 {
    return new Contract(address, _abi, runner) as unknown as DebateContractV2;
  }
}
