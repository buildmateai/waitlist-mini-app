/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DebateToken,
  DebateTokenInterface,
} from "../../contracts/DebateToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockPeriod",
        type: "uint256",
      },
    ],
    name: "TokensStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "TokensUnstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_REWARD_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct DebateToken.Stake",
        name: "stake",
        type: "tuple",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "totalRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct DebateToken.Stake[]",
        name: "stakes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintDebateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockPeriod",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockPeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803462000415576001600160401b03906040908082018381118282101762000315578252600c815260206b2232b130ba32902a37b5b2b760a11b818301528251918383018381108682111762000315578452600683526544454241544560d01b82840152805194808611620003155760038054966001938489811c991680156200040a575b868a1014620003f4578190601f998a81116200039e575b5086908a831160011462000337576000926200032b575b505060001982841b1c191690841b1781555b8451918211620003155760049485548481811c911680156200030a575b86821014620002f557888111620002aa575b508497831160011462000241579682939495969760009362000235575b505082841b92600019911b1c19161783555b33156200021e5760058054610100600160a81b0319811633600881811b610100600160a81b03169290921790935560ff9391929083901c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600655166200020f576002546a52b7d2dcc80cd2e400000092838201809211620001fa57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516116a490816200041b8239f35b601190634e487b7160e01b6000525260246000fd5b50905163d93c066560e01b8152fd5b8351631e4fbdf760e01b8152600081850152602490fd5b01519150388062000111565b90601f1983169786600052856000209260005b8a811062000294575084869798999a1062000279575b50505050811b01835562000123565b01519060f884600019921b161c19169055388080806200026a565b8183015185559386019391870191870162000254565b86600052856000208980860160051c820192888710620002eb575b0160051c019085905b828110620002de575050620000f4565b60008155018590620002ce565b92508192620002c5565b602287634e487b7160e01b6000525260246000fd5b90607f1690620000e2565b634e487b7160e01b600052604160045260246000fd5b015190503880620000b3565b90869350601f1983169185600052886000209260005b8a8282106200038757505084116200036e575b505050811b018155620000c5565b015160001983861b60f8161c1916905538808062000360565b8385015186558a979095019493840193016200034d565b90915083600052866000208a80850160051c820192898610620003ea575b918891869594930160051c01915b828110620003da5750506200009c565b60008155859450889101620003ca565b92508192620003bc565b634e487b7160e01b600052602260045260246000fd5b98607f169862000085565b600080fdfe608060409080825260048036101561001657600080fd5b600091823560e01c90816306fdde0314610f2d57508063095ea7b314610e825780630f1a290514610e6657806318160ddd14610e4757806323b872dd14610e0a5780632e17de7814610c2c578063313ce56714610c1057806332cb6b0c14610be95780633f4ba83a14610b7e57806342966c6814610b615780635c975abb14610b3d57806370a0823114610b06578063715018a614610aa557806379cc679014610a755780637b0472f0146108ac578063842e2981146106c05780638456cb59146106655780638da5cb5b1461063857806395d89b411461053557806399f85e3a146104dd5780639bfd8d61146104a5578063a9059cbb14610474578063b5d5b5fa146103fd578063bcdc3cfc146103de578063dd62ed3e14610395578063f2fde38b146102f7578063f6ed20171461020b578063f846a885146101ef5763fd3b5cdd1461016357600080fd5b346101eb57826003193601126101eb5761017b61106c565b60243591610187611123565b6b033b2e3c9fd0803ce80000006101a0846002546114dc565b116101b35750906101b09161156e565b80f35b606490602086519162461bcd60e51b8352820152601260248201527145786365656473206d617820737570706c7960701b6044820152fd5b5080fd5b8284346101eb57816003193601126101eb576020905160028152f35b508290346102f357602092836003193601126102f05761022961106c565b6001600160a01b03168152600784528281208054909282919061024b82611613565b94610258875196876110cf565b82865283528683208390888088015b8584106102d2575050505050505b82518110156102c957606061028a828561163a565b5101516102a0575b61029b9061162b565b610275565b906102c161029b916102bb6102b5858761163a565b516115c2565b906114dc565b919050610292565b84828551908152f35b60019185916102e08561152a565b8152019201920191908990610267565b80fd5b8280fd5b508290346102f35760203660031901126102f35761031361106c565b61031b611123565b6001600160a01b0381811693909290841561037f57505060058054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101859052602490fd5b8284346101eb57806003193601126101eb57806020926103b361106c565b6103bb611087565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b8284346101eb57816003193601126101eb576020906009549051908152f35b8284346101eb57806003193601126101eb5761041761106c565b6001600160a01b031682526007602052808220805460243593908410156102f05750608092610445916110f1565b509081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b8284346101eb57806003193601126101eb5760209061049e61049461106c565b6024359033611152565b5160018152f35b8284346101eb5760203660031901126101eb5760209181906001600160a01b036104cd61106c565b1681526008845220549051908152f35b509190346102f05760803660031901126102f0578151926104fd8461109d565b3583526024356020840152604435828401526064359081151582036102f057508261052e91606060209501526115c2565b9051908152f35b5091346101eb57816003193601126101eb57805191809380549160019083821c9282851694851561062e575b602095868610811461061b578589529081156105f7575060011461059f575b61059b8787610591828c03836110cf565b5191829182611023565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106105e4575050508261059b9461059192820101943880610580565b80548685018801529286019281016105c6565b60ff19168887015250505050151560051b83010192506105918261059b3880610580565b634e487b7160e01b845260228352602484fd5b93607f1693610561565b8284346101eb57816003193601126101eb57600554905160089190911c6001600160a01b03168152602090f35b8284346101eb57816003193601126101eb5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916106a3611123565b6106ab6114e9565b600160ff19600554161760055551338152a180f35b509190346102f057602091826003193601126101eb576001600160a01b036106e661106c565b16825260078352808220938454906106fd82611613565b9561070a845197886110cf565b82875284528484208490868089015b85841061088e5750505050505081805b855181101561076957606061073e828861163a565b510151610754575b61074f9061162b565b610729565b9261076161074f9161162b565b939050610746565b5092909361077683611613565b92610783865194856110cf565b808452610792601f1991611613565b0182855b828110610862575050508391845b82518110156108055760606107b9828561163a565b5101516107cf575b6107ca9061162b565b6107a4565b926107fd6107ca916107e1868661163a565b516107ec828961163a565b526107f7818861163a565b5061162b565b9390506107c1565b5093915050835192808401908085528351809252808686019401925b82811061082e5785850386f35b8351805186528083015186840152878101518887015260609081015115159086015260809094019392810192600101610821565b875161086d8161109d565b87815287838201528789820152876060820152828288010152018390610796565b600191859161089c8561152a565b8152019201920191908790610719565b5091346101eb57806003193601126101eb578235906024356108cc611507565b6108d46114e9565b8215610a325733845260208481528383862054106109f9576108f7843033611152565b33855260078152828520835161090c8161109d565b85815282810142815285820190858252606083019360018552805490680100000000000000008210156109e65790610949916001820181556110f1565b9390936109d4577fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc98999a50906003939291518355516001830155516002820155019051151560ff80198354169116179055338652600881528286206109b08682546114dc565b90556109be856009546114dc565b60095582519485528401523392a2600160065580f35b634e487b7160e01b8a52898b5260248afd5b634e487b7160e01b8b5260418c5260248bfd5b8560649184519162461bcd60e51b83528201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152fd5b815162461bcd60e51b8152602081870152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b8284346101eb573660031901126102f0576101b0610a9161106c565b60243590610aa0823383611374565b611447565b82346102f057806003193601126102f057610abe611123565b60058054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8284346101eb5760203660031901126101eb5760209181906001600160a01b03610b2e61106c565b16815280845220549051908152f35b8284346101eb57816003193601126101eb5760209060ff6005541690519015158152f35b50346101eb5760203660031901126101eb576101b0903533611447565b508290346102f357826003193601126102f357610b99611123565b6005549060ff821615610bdb575060ff1916600555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b8284346101eb57816003193601126101eb57602090516b033b2e3c9fd0803ce80000008152f35b8284346101eb57816003193601126101eb576020905160128152f35b5091346101eb57602090816003193601126102f3578335610c4b611507565b3384526007835281842054811015610dd157610c7090338552600784528285206110f1565b5091600383019081549560ff871615610d9d57610c9660018601546002870154906114dc565b4210610d675750610d24849596610cd7610cd27f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c233697549861152a565b6115c2565b93610ce285896114dc565b9160ff1916905533885260088352848820610cfe888254611561565b9055610d0c87600954611561565b60095583151580610d46575b610d37575b3330611152565b82519485528401523392a2600160065580f35b610d41843061156e565b610d1d565b506b033b2e3c9fd0803ce8000000610d60856002546114dc565b1115610d18565b60649184519162461bcd60e51b8352820152601260248201527114dd185ad9481cdd1a5b1b081b1bd8dad95960721b6044820152fd5b60649184519162461bcd60e51b8352820152601060248201526f5374616b65206e6f742061637469766560801b6044820152fd5b815162461bcd60e51b81528086018490526013602482015272092dcecc2d8d2c840e6e8c2d6ca40d2dcc8caf606b1b6044820152606490fd5b8284346101eb5760603660031901126101eb5760209061049e610e2b61106c565b610e33611087565b60443591610e42833383611374565b611152565b8284346101eb57816003193601126101eb576020906002549051908152f35b8284346101eb57816003193601126101eb576020905160058152f35b508290346102f357816003193601126102f357610e9d61106c565b602435903315610f16576001600160a01b0316918215610eff57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b918491503461101f578360031936011261101f57600354600181811c9186908281168015611015575b60209586861082146110025750848852908115610fe05750600114610f87575b61059b8686610591828b03836110cf565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610fcd575050508261059b94610591928201019486610f76565b8054868501880152928601928101610fb0565b60ff191687860152505050151560051b83010192506105918261059b86610f76565b634e487b7160e01b845260229052602483fd5b93607f1693610f56565b8380fd5b6020808252825181830181905290939260005b82811061105857505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501611036565b600435906001600160a01b038216820361108257565b600080fd5b602435906001600160a01b038216820361108257565b6080810190811067ffffffffffffffff8211176110b957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176110b957604052565b805482101561110d5760005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b60055460081c6001600160a01b0316330361113a57565b60405163118cdaa760e01b8152336004820152602490fd5b6001600160a01b038082168015949093909291908561135b571693841561134257823085141580611338575b611240575b5061118c6114e9565b156111d057506020816111b060008051602061164f833981519152936002546114dc565b6002555b84600052600082526040600020818154019055604051908152a3565b6000908382528160205260408220549083821061120e5750918160408260008051602061164f833981519152958760209652838652039120556111b4565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b8060011b81810460021482151715611322576064900480611262575b50611183565b9150925061126e6114e9565b6000928484528360205260408420548281106112f25790826112ea9392878752866020520360408620558160025403600255848660008051602061164f8339815191526020604051868152a3857ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb66020604051858152a2611561565b91388061125c565b60405163391434e360e21b81526001600160a01b0385166004820152602481019190915260448101839052606490fd5b634e487b7160e01b600052601160045260246000fd5b503086141561117e565b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b9160018060a01b0380931691600093838552600160205260409384862091831691828752602052848620549260001984106113b3575b50505050505050565b848410611417575080156113ff5781156113e7578552600160205283852090855260205203912055388080808080806113aa565b8451634a1406b160e11b815260048101879052602490fd5b845163e602df0560e01b815260048101879052602490fd5b8551637dc7a0d960e11b81526001600160a01b039190911660048201526024810184905260448101859052606490fd5b906001600160a01b03821690811561135b576114616114e9565b600092828452836020526040842054908282106114aa57508160008051602061164f833981519152926020928587528684520360408620558060025403600255604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101829052606490fd5b9190820180921161132257565b60ff600554166114f557565b60405163d93c066560e01b8152600490fd5b600260065414611518576002600655565b604051633ee5aeb560e01b8152600490fd5b906040516115378161109d565b606060ff600383958054855260018101546020860152600281015460408601520154161515910152565b9190820391821161132257565b6001600160a01b03169081156113425760008051602061164f833981519152602060009261159a6114e9565b6115a6816002546114dc565b60025584845283825260408420818154019055604051908152a3565b60608101511561160d576115da602082015142611561565b90516005810290808204600514901517156113225760649004818102918183041490151715611322576301e13380900490565b50600090565b67ffffffffffffffff81116110b95760051b60200190565b60001981146113225760010190565b805182101561110d5760209160051b01019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d067bdf5b4257f5fd9a4b2c4d0719e61bc0e7a2496935c0a17d8dd0897bb813064736f6c63430008140033";

type DebateTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebateTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebateToken__factory extends ContractFactory {
  constructor(...args: DebateTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DebateToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DebateToken__factory {
    return super.connect(runner) as DebateToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebateTokenInterface {
    return new Interface(_abi) as DebateTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DebateToken {
    return new Contract(address, _abi, runner) as unknown as DebateToken;
  }
}
